apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-du.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-du.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-du.selectorLabels" . | nindent 8 }}
        app: oai-du
    {{- if .Values.multus.f1Interface.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: >-
          [{
                 "name": "{{ .Chart.Name }}-{{ .Values.multus.f1Interface.name }}",
                 "interface": "{{ .Values.multus.f1Interface.name }}"
                {{- if .Values.multus.f1Interface.mac }}
                 ,"mac":  "{{ .Values.multus.f1Interface.mac }}"
                {{- end }}
                {{- if .Values.multus.defaultGateway }}
                 ,"default-route": ["{{ .Values.multus.defaultGateway }}"]
                {{- end }}
                {{- if .Values.multus.f1Interface.gateway }}
                ,"gateway": "{{ .Values.multus.f1Interface.gateway }}"
                {{- end }}
          }
          {{- if .Values.multus.ru1Interface.create }}
          ,{
                 "name": "{{ .Chart.Name }}-{{ .Values.multus.ru1Interface.name }}",
                 "interface": "{{ .Values.multus.ru1Interface.name }}"
                {{- if .Values.multus.ru1Interface.mac }}
                 ,"mac":  "{{ .Values.multus.ru1Interface.mac }}"
                {{- end }}
                {{- if .Values.multus.ru1Interface.gateway }}
                 ,"gateway": ["{{ .Values.multus.ru1Interface.gateway }}"]
                {{- end }}
          }
          {{- end }}
          {{- if .Values.multus.ru2Interface.create }}
          ,{
                 "name": "{{ .Chart.Name }}-{{ .Values.multus.ru2Interface.name }}",
                 "interface": "{{ .Values.multus.ru2Interface.name }}"
                {{- if .Values.multus.ru2Interface.mac }}
                 ,"mac":  "{{ .Values.multus.ru2Interface.mac }}"
                {{- end }}
                {{- if .Values.multus.ru2Interface.gateway }}
                 ,"gateway": ["{{ .Values.multus.ru2Interface.gateway }}"]
                {{- end }}
          }
          {{- end }}
          ]
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        capabilities:
          add:
            - NET_ADMIN
            - NET_RAW
          drop:
            - ALL
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      initContainers:
        - name: init
          image: docker.io/oaisoftwarealliance/oai-tcpdump-init:alpine-3.20
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - until ncat -zv {{ .Values.config.cuHost }} 38472 --sctp ; do echo waiting for cu or cucp to start; sleep 1; done
          resources:
            requests:
              memory: 50Mi
              cpu: 1m
            limits:
              memory: 50Mi
              cpu: 1m
      containers:
      - name: gnbdu
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        volumeMounts:
        {{- if eq .Values.config.usrp "aw2s" }}
          - mountPath: /opt/oai-gnb-aw2s/etc
        {{- else }}
          - mountPath: /opt/oai-gnb/etc
        {{- end }}
            name: configuration
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.nf.memory | quote }}
            cpu: {{ .Values.resources.requests.nf.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.nf.memory | quote }}
            cpu: {{ .Values.resources.limits.nf.cpu | quote }}
        {{- end}}
        ports:
        - containerPort: 38472
          name: f1c
          protocol: SCTP
        - containerPort: {{ .Values.config.f1duPort}}
          name: f1u
          protocol: UDP
        {{- if .Values.start.gnbdu}}
        command: [ "/bin/bash", "-c" ]
        args:
         -  CU_IP_ADDRESS=$(getent hosts $CU_HOST | awk '{print $1}')
            CU_IP_ADDRESS=$(if [[ $CU_IP_ADDRESS ]]; then echo $CU_IP_ADDRESS; else echo $CU_HOST;fi)
            F1_DU_IP_ADDRESS=$(ip -4 addr show $F1_IF_NAME | grep inet | awk '{ print $2 }' | cut -d/ -f1);
            RU1_IP_ADDRESS=$(ip -4 addr show ru1 | grep inet | awk '{ print $2 }' | cut -d/ -f1);
         {{- if eq .Values.config.usrp "aw2s" }}
            sed -e s/@F1_DU_IP_ADDRESS@/$F1_DU_IP_ADDRESS/g
                -e s/@CU_IP_ADDRESS@/$CU_IP_ADDRESS/g
                -e s/@RU1_IP_ADDRESS@/$RU1_IP_ADDRESS/g
                /opt/oai-gnb-aw2s/etc/du.conf | tee /tmp/du.conf;
            exec /opt/oai-gnb-aw2s/bin/nr-softmodem -O /tmp/du.conf $USE_ADDITIONAL_OPTIONS;
         {{- else }}
            sed -e s/@F1_DU_IP_ADDRESS@/$F1_DU_IP_ADDRESS/g
                -e s/@CU_IP_ADDRESS@/$CU_IP_ADDRESS/g
                /opt/oai-gnb/etc/du.conf | tee /tmp/du.conf;
          {{- if eq .Values.config.usrp "b2xx"}}
            /opt/oai-gnb/bin/uhd_images_downloader.py -t b2xx;
          {{- else if eq .Values.config.usrp "n3xx" }}
            /opt/oai-gnb/bin/uhd_images_downloader.py -t n3xx;
          {{- else if eq .Values.config.usrp "x3xx" }}
            /opt/oai-gnb/bin/uhd_images_downloader.py -t x3xx;
          {{- end }}
            exec /opt/oai-gnb/bin/nr-softmodem -O /tmp/du.conf $USE_ADDITIONAL_OPTIONS;
         {{- end }}
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        env:
          - name: TZ
            value: {{ .Values.config.timeZone }}
          - name: USE_ADDITIONAL_OPTIONS
            value: {{ .Values.config.useAdditionalOptions }}
          - name: F1_IF_NAME
            value: {{ .Values.config.f1IfName }}
          - name: CU_HOST
            value: {{ .Values.config.cuHost }}
      {{- if .Values.includeTcpDumpContainer }}
      - name: tcpdump
        image: "{{ .Values.tcpdumpimage.repository }}:{{ .Values.tcpdumpimage.version }}"
        imagePullPolicy: {{ .Values.tcpdumpimage.pullPolicy }}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.requests.tcpdump.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.limits.tcpdump.cpu | quote }}
        {{- end}}
        {{- if .Values.start.tcpdump}}
        command:
          - /bin/sh
          - -c
          - /usr/bin/tcpdump -i {{ .Values.config.n2IfName }} -w /tmp/pcap/{{ .Chart.Name }}_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        {{- if .Values.persistent.sharedvolume }}
        volumeMounts:
        - mountPath: "/tmp/pcap"
          name: oai5g-pv
        {{- end}}
      {{- end }}
      volumes:
      {{- if .Values.persistent.sharedvolume }}
      - name: oai5g-pv
        persistentVolumeClaim:
          claimName: oai5g-pvc
      {{- end }}
      - configMap:
          name: {{ .Chart.Name }}-configmap
        name: configuration
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: 
         {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
